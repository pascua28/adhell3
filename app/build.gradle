apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    defaultConfig {
        def buildPropsFile = file('build.properties')
        def buildNumber

        if (buildPropsFile.canRead()) {
            Properties buildProps = new Properties()
            buildProps.load(new FileInputStream(buildPropsFile))
            buildNumber = buildProps['build.number'].toInteger()
        } else {
            throw new FileNotFoundException("Could not read build.properties!")
        }

        def appPropsFile = file('app.properties')
        def packageName = ""
        def domainLimit = "15000"
        def domainPrefix = "false"
        def sklKey = ""
        def disableApps = "false"
        def appComponent = "false"
        def showSystemAppComponent = "false"
        def defaultHost = "https://gitlab.com/fusionjack/hosts/raw/master/hosts"

        if (appPropsFile.exists()) {
            Properties appProps = new Properties()
            appProps.load(new FileInputStream(appPropsFile))
            if (appProps['package.name'] != null) {
                packageName = appProps['package.name']
            }
            if (appProps['domain.limit'] != null) {
                domainLimit = appProps['domain.limit']
            }
            if (appProps['skl.key'] != null) {
                sklKey = appProps['skl.key']
            }
            if (appProps['domain.prefix'] != null) {
                domainPrefix = appProps['domain.prefix']
            }
            if (appProps['enable.disableApps'] != null) {
                disableApps = appProps['enable.disableApps']
            }
            if (appProps['enable.appComponent'] != null) {
                appComponent = appProps['enable.appComponent']
            }
            if (appProps['appComponent.showSystemApps'] != null) {
                showSystemAppComponent = appProps['appComponent.showSystemApps']
            }
            if (appProps['default.host'] != null) {
                defaultHost = appProps['default.host']
            }
        }
        applicationId packageName
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "3.2." + buildNumber
        resConfigs "en"

        buildConfigField("int", "DOMAIN_LIMIT", domainLimit)
        buildConfigField("boolean", "DOMAIN_PREFIX", domainPrefix)
        buildConfigField("String", "SKL_KEY", '"' + sklKey + '"')
        buildConfigField("boolean", "DISABLE_APPS", disableApps)
        buildConfigField("boolean", "APP_COMPONENT", appComponent)
        buildConfigField("boolean", "SHOW_SYSTEM_APP_COMPONENT", showSystemAppComponent)
        buildConfigField("String", "DEFAULT_HOST", '"' + defaultHost + '"')
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'

        exclude 'META-INF/androidx.*'
        exclude 'META-INF/com.google.android.material_material.*'
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
        release {
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
    }
    buildFeatures {
        viewBinding = true
    }
    buildToolsVersion "30.0.2"
}

dependencies {
    def core_version = "1.5.0-alpha05"
    def appcompat_version = "1.3.0-alpha02"
    def preference_version = "1.1.1"
    def fragment_version = "1.3.0-rc01"
    def activity_version = "1.2.0-rc01"
    def lifecycle_version = "2.3.0-rc01"
    def biometric_version = "1.2.0-alpha01"
    def work_version = "2.5.0-beta02"
    def viewpager2_version = "1.1.0-alpha01"
    def swiperefreshlayout_version = "1.2.0-alpha01"
    def constraintlayout_version = "2.1.0-alpha2"
    def coordinatorlayout_version = "1.1.0"
    def room_version = "2.3.0-alpha04"
    def material_version = "1.3.0-beta01"
    def dagger_version = "2.30.1"
    def rxandroid_version = "3.0.0"
    def rxjava_version = "3.0.8"
    def speeddial_version = "3.1.1"
    def leakCanary_version = "2.6"
    def timber_version = "4.7.1"

    compileOnly files("libs/knoxsdk.jar")
    implementation "androidx.core:core:$core_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.preference:preference:$preference_version"
    implementation "androidx.activity:activity:$activity_version"
    implementation "androidx.fragment:fragment:$fragment_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.biometric:biometric:$biometric_version"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.viewpager2:viewpager2:$viewpager2_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorlayout_version"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "io.reactivex.rxjava3:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"
    implementation "com.leinardi.android:speed-dial:$speeddial_version"
    implementation "com.jakewharton.timber:timber:$timber_version"

    debugImplementation  "com.squareup.leakcanary:leakcanary-android:$leakCanary_version"
}