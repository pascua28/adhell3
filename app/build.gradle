apply plugin: 'com.android.application'

android {
    compileSdkVersion 30

    buildToolsVersion "30.0.3"

    def signApk = false
    Properties appProps = null
    def appPropsFile = file('app.properties')
    if (appPropsFile.exists()) {
        appProps = new Properties()
        appProps.load(new FileInputStream(appPropsFile))
        if (appProps['release.store.file'] != null) {
            signApk = true
        }
    }

    defaultConfig {
        def buildPropsFile = file('build.properties')
        def buildNumber
        def buildDate

        if (buildPropsFile.canRead()) {
            Properties buildProps = new Properties()
            buildProps.load(new FileInputStream(buildPropsFile))
            buildNumber = buildProps['build.number']
            buildDate = buildProps['build.date']
        } else {
            throw new FileNotFoundException("Could not read build.properties!")
        }

        def packageName = ""
        def domainLimit = "15000"
        def blockedDomainDurationUi = "24"
        def blockedDomainDurationDb = "72"
        def domainPrefix = "false"
        def sklKey = ""
        def disableApps = "false"
        def appComponent = "false"
        def showSystemAppComponent = "false"
        def defaultHost = "https://gitlab.com/fusionjack/adhell3-hosts/-/raw/master/hosts"

        if (appPropsFile.exists()) {
            if (appProps['package.name'] != null) {
                packageName = appProps['package.name']
            }
            if (appProps['domain.limit'] != null) {
                domainLimit = appProps['domain.limit']
            }
            if (appProps['blockedDomain.duration.ui'] != null) {
                blockedDomainDurationUi = appProps['blockedDomain.duration.ui']
            }
            if (appProps['blockedDomain.duration.db'] != null) {
                blockedDomainDurationDb = appProps['blockedDomain.duration.db']
            }
            if (appProps['skl.key'] != null) {
                sklKey = appProps['skl.key']
            }
            if (appProps['domain.prefix'] != null) {
                domainPrefix = appProps['domain.prefix']
            }
            if (appProps['enable.disableApps'] != null) {
                disableApps = appProps['enable.disableApps']
            }
            if (appProps['enable.appComponent'] != null) {
                appComponent = appProps['enable.appComponent']
            }
            if (appProps['appComponent.showSystemApps'] != null) {
                showSystemAppComponent = appProps['appComponent.showSystemApps']
            }
            if (appProps['default.host'] != null) {
                defaultHost = appProps['default.host']
            }
        }

        applicationId packageName
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "3.2." + buildNumber

        buildConfigField("String", "BUILD_DATE", '"' + buildDate + '"')
        buildConfigField("int", "DOMAIN_LIMIT", domainLimit)
        buildConfigField("int", "BLOCKED_DOMAIN_DURATION_UI", blockedDomainDurationUi)
        buildConfigField("int", "BLOCKED_DOMAIN_DURATION_DB", blockedDomainDurationDb)
        buildConfigField("boolean", "DOMAIN_PREFIX", domainPrefix)
        buildConfigField("String", "SKL_KEY", '"' + sklKey + '"')
        buildConfigField("boolean", "DISABLE_APPS", disableApps)
        buildConfigField("boolean", "APP_COMPONENT", appComponent)
        buildConfigField("boolean", "SHOW_SYSTEM_APP_COMPONENT", showSystemAppComponent)
        buildConfigField("String", "DEFAULT_HOST", '"' + defaultHost + '"')
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            if (signApk) {
                storeFile file(appProps['release.store.file'])
                storePassword appProps['release.store.password']
                keyAlias appProps['release.key.alias']
                keyPassword appProps['release.key.password']
            }
        }
    }

    buildTypes {
        debug {
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
        release {
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            zipAlignEnabled true
            if (signApk) {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    compileOnly files('libs/knoxsdk.jar')

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.preference:preference:1.1.1"
    implementation 'androidx.fragment:fragment:1.3.1'
    implementation 'com.google.android.material:material:1.3.0'

    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.11'

    implementation 'androidx.room:room-runtime:2.2.6'
    annotationProcessor 'androidx.room:room-compiler:2.2.6'

    implementation 'com.google.dagger:dagger:2.31'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.31'

    implementation 'com.google.guava:guava:30.1-android'

    implementation 'com.github.toanvc:floatingactionmenu:0.8.9'

    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'
    testImplementation 'junit:junit:4.13.2'
}